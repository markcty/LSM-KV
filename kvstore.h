//// Created by markcty on 2021/4/14.//#ifndef LSM_KV__KVSTORE_H_#define LSM_KV__KVSTORE_H_#include <string>#include "kvstore_api.h"#include "SkipList.h"#include "SSTable.h"#include "util.h"using namespace std;using namespace utils;class KVStore : public KVStoreAPI { private:  static const unsigned long BloomFilterSize = 10240; // 10KB  static const unsigned long SSTableSize = 2097152;   // 2MB  static const unsigned long HeaderSize = 32; // 32Bytes  SkipList memTable;  // if memTable is large enough to be converted to a SSTable  inline bool memOverflow(); public:  explicit KVStore(const string &dir);  ~KVStore() = default;  void put(uint64_t key, const string &value) override;  string get(uint64_t key) override;  bool del(uint64_t key) override;  void reset() override;};#endif //LSM_KV__KVSTORE_H_